@model Hotel_LandLyst_WebApp.Models.OrderModel

@{
    ViewData["Title"] = "OrderPage";
}

<h1>OrderPage</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="OrderPage">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="CheckInDate" class="control-label"></label>
                <input asp-for="CheckInDate" class="form-control" />
                <span asp-validation-for="CheckInDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
        @for (int i = 0; i < Model.Rooms.Count; i++)
        {
            <div class="table-responsive">
                <table class="table-bordered w-100 p-3" style="text-align:center;">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(x => x.Rooms[i].Number)
                            </th>
                            <th>
                                @Html.DisplayNameFor(x => x.Rooms[i].PricePerNight)
                            </th>
                            <th>
                                @Html.DisplayNameFor(x => x.Rooms[i].Clean)
                            </th>
                            <th>
                                @Html.DisplayNameFor(x => x.Rooms[i].Rented)
                            </th>
                        </tr>
                    </thead>

                    <tbody>
                        <tr>
                            <td>
                                @Html.DisplayFor(x => x.Rooms[i].Number)
                            </td>
                            <td>
                                @Html.DisplayFor(x => x.Rooms[i].PricePerNight)
                            </td>
                            <td>
                                @Html.DisplayFor(x => x.Rooms[i].Clean)
                            </td>
                            <td>
                                @Html.DisplayFor(x => x.Rooms[i].Rented)
                            </td>
                        </tr>
                    </tbody>
                    @for (int j = 0; j < Model.Rooms[i].Furnitures.Count; j++)
                    {
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(x => x.Rooms[i].Furnitures[j].Name)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(x => x.Rooms[j].Furnitures[j].Price)
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>
                                    @Html.DisplayFor(x => x.Rooms[i].Furnitures[j].Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(x => x.Rooms[i].Furnitures[j].Price)
                                </td>
                            </tr>
                        </tbody>
                    }
                </table>
                <ul style="display: inline-block; list-style-type:none;">
                    <li style="margin-left: 10px; display: inline-block; list-style-type: none;">
                        @using (Html.BeginForm("DeleteCourse", "Course", FormMethod.Get))
                        {
                            @Html.ValidationSummary(true)
                            //<input asp-for="Id" type="number" value="@Model.Courses[i].Id" hidden />
                            <button type="submit">Fjern</button>
                        }
                    </li>
                </ul>
            </div>
        }
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
